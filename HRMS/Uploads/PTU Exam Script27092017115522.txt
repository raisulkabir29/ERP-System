DROP TABLE LOGS;
DROP TABLE DATESHEET;
DROP TABLE MENU;
DROP TABLE ROLEUSER;
DROP TABLE ROLEMASTER;
DROP TABLE USERMASTER;
DROP TABLE PASSWORDGENERATOR;
DROP TABLE COLL_SUB_LIST;
DROP TABLE TIMEMASTER;

DROP SEQUENCE DATESHEET_SEQ;
DROP SEQUENCE ROLEUSER_SEQ;
DROP SEQUENCE USERMASTER_SEQ;
DROP SEQUENCE PASSWORDGENERATOR_SEQ;
DROP SEQUENCE COLL_SUB_SEQ;
DROP SEQUENCE LOGS_SEQ;
DROP SEQUENCE TIMEMASTER_SEQ;





CREATE TABLE ROLEMASTER(
RID NUMBER NOT NULL,
TITLE VARCHAR(50) NOT NULL,
CONSTRAINT PK_ROLEDATA_ID PRIMARY KEY(RID)
);

CREATE TABLE USERMASTER(
USER_ID NUMBER NOT NULL,
USERNAME VARCHAR(20) NOT NULL,
PASSWORD VARCHAR(20) NOT NULL,
COLLEGECODE VARCHAR(20) NULL,
ISBLOCKED CHAR(1) NULL,
CONSTRAINT PK_USER_ID PRIMARY KEY(USER_ID)
);

CREATE TABLE ROLEUSER(
ROLE_USER_ID NUMBER NOT NULL,
ROLEID NUMBER NULL,
USERID NUMBER NULL,
CONSTRAINT PK_ROLEUSER_ID PRIMARY KEY(ROLE_USER_ID),
CONSTRAINT FK_USERDATA FOREIGN KEY(USERID) REFERENCES USERMASTER(USER_ID),
CONSTRAINT FK_ROLEDATA FOREIGN KEY(ROLEID) REFERENCES ROLEMASTER(RID)
);

CREATE TABLE MENU(
MENU_ID NUMBER NOT NULL,
MENUNAME VARCHAR(30) NOT NULL,
DESCRIPTION VARCHAR(100) NULL,
PARENTID NUMBER NULL,
NAVIGATIONURL VARCHAR(200) NULL,
ISDEACTIVATE CHAR(1) NULL,
ISLIMITEDTIME CHAR(1) NULL,
STARTDATE DATE NULL,
ENDDATE DATE NULL,
ROLEID NUMBER NULL,
CONSTRAINT PK_MENU_ID PRIMARY KEY(MENU_ID),
CONSTRAINT FK_PARENT_MENU FOREIGN KEY(PARENTID) REFERENCES MENU(MENU_ID),
CONSTRAINT FK_ROLE_MENU FOREIGN KEY(ROLEID) REFERENCES ROLEMASTER(RID)
);

CREATE TABLE DATESHEET(
SHEET_ID NUMBER NOT NULL,
EXAMDATE DATE NOT NULL,
SEMESTER NUMBER NOT NULL,
SESS VARCHAR(20) NOT NULL,
SUBJECTCODE VARCHAR(20) NOT NULL,
SUBJECTTITLE VARCHAR(200) NOT NULL,
PAPERID VARCHAR(20) NOT NULL,
MCODE NUMBER NOT NULL,
COURSEBRANCH VARCHAR(20),
REMARKS VARCHAR(20) NULL,
TYPE VARCHAR(20) NULL,
ISUPLOADED CHAR(1) NOT NULL,
FILECONTENT BLOB NULL, 
EXAMUPLOADDATE DATE NULL,
CONSTRAINT PK_XCEL PRIMARY KEY(SHEET_ID)
);

CREATE TABLE TIMEMASTER(
TIME_ID NUMBER NOT NULL,
TITLE VARCHAR(200) NOT NULL,
SHORTCODE CHAR(1) NOT NULL,
VISIBLE_START_TIME TIMESTAMP NULL,
VISIBLE_END_TIME TIMESTAMP NULL,
CONSTRAINT PK_TIME PRIMARY KEY(TIME_ID)
);






CREATE TABLE PASSWORDGENERATOR(
PASS_ID NUMBER NOT NULL,
PASSWORD VARCHAR(200) NULL,
CREATETIME DATE NOT NULL,
ISVALID CHAR(1) NOT NULL,
EXPIRETIME DATE NOT NULL,
EXAMDATE DATE NOT NULL,
COLLEGECODE VARCHAR(20) NOT NULL,
SESS CHAR(1) NULL,
MCODE NUMBER NULL,
PAPERID VARCHAR(20) NULL,
TYPE VARCHAR(20) NULL,
CONSTRAINT PK_PASS PRIMARY KEY(PASS_ID)
);




CREATE TABLE COLL_SUB_LIST(
COLL_ID NUMBER NOT NULL,
MCODE NUMBER NOT NULL,
PAPERID VARCHAR(20) NOT NULL,
SUBJECTCODE VARCHAR(20) NULL,
COLLEGECODE VARCHAR(20) NOT NULL,
STUDENTROLLNO VARCHAR(20) NULL,
ANSWERSHEETID VARCHAR(50) NULL,
SESS CHAR(1) NULL,
TYPE VARCHAR(20) NULL,
AUTH_PERSON_NAME VARCHAR(50) NULL,
AUTH_MOBILE_NO VARCHAR(15) NULL,
AUTH_EMAIL VARCHAR(100) NULL,
CONSTRAINT PK_COLL PRIMARY KEY(COLL_ID)
);

CREATE TABLE LOGS(
LOG_ID NUMBER NOT NULL,
EXAMCENTERID VARCHAR(100) NOT NULL,
COLLEGECODE VARCHAR(20) NULL,
NODECENTERID VARCHAR(100) NULL,
DOWNLOADTIME DATE NULL,
DATESHEETID NUMBER NULL,
COLL_SUBJECT_ID NUMBER NULL,
CONSTRAINT PK_LOGS PRIMARY KEY(LOG_ID),
CONSTRAINT FK_LOGS_DATESHEET FOREIGN KEY(DATESHEETID) REFERENCES DATESHEET(SHEET_ID),
CONSTRAINT FK_COL_SUB FOREIGN KEY(COLL_SUBJECT_ID) REFERENCES COLL_SUB_LIST(COLL_ID)
);







CREATE SEQUENCE USERMASTER_SEQ START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE ROLEUSER_SEQ START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE DATESHEET_SEQ START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE TIMEMASTER_SEQ START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE PASSWORDGENERATOR_SEQ START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE LOGS_SEQ START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE COLL_SUB_SEQ START WITH 1 INCREMENT BY 1;



CREATE OR REPLACE TRIGGER TRIG_USERMASTER
BEFORE INSERT ON USERMASTER
FOR EACH ROW 
BEGIN
SELECT USERMASTER_SEQ.NEXTVAL
INTO :NEW.USER_ID
FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRIG_ROLEUSER
BEFORE INSERT ON ROLEUSER
FOR EACH ROW 
BEGIN
SELECT ROLEUSER_SEQ.NEXTVAL
INTO :NEW.ROLE_USER_ID
FROM DUAL;
END;
/


CREATE OR REPLACE TRIGGER TRIG_DATE_SHEET_PAPER
BEFORE INSERT ON DATESHEET
FOR EACH ROW
BEGIN
SELECT DATESHEET_SEQ.NEXTVAL
INTO :NEW.SHEET_ID
FROM DUAL; 
END;
/

CREATE OR REPLACE TRIGGER TRIG_TIME_MASTER
BEFORE INSERT ON TIMEMASTER
FOR EACH ROW
BEGIN
SELECT TIMEMASTER_SEQ.NEXTVAL
INTO :NEW.TIME_ID
FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRIG_PASS_GEN
BEFORE INSERT ON PASSWORDGENERATOR
FOR EACH ROW
BEGIN
SELECT PASSWORDGENERATOR_SEQ.NEXTVAL
INTO :NEW.PASS_ID
FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRIG_LOGS_MASTER
BEFORE INSERT ON LOGS
FOR EACH ROW
BEGIN
SELECT LOGS_SEQ.NEXTVAL
INTO :NEW.LOG_ID
FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRIG_COLL_SUB
BEFORE INSERT ON COLL_SUB_LIST
FOR EACH ROW
BEGIN
SELECT COLL_SUB_SEQ.NEXTVAL
INTO :NEW.COLL_ID
FROM DUAL;
END;
/




CREATE OR REPLACE VIEW COLL_SUB_DATESHEET AS SELECT  dt.SHEET_ID,dt.EXAMDATE,dt.COURSEBRANCH,dt.EXAMUPLOADDATE,dt.ISUPLOADED,dt.MCODE,dt.PAPERID,dt.REMARKS,dt.SEMESTER,dt.SESS,dt.SUBJECTCODE,dt.SUBJECTTITLE,dt.TYPE,cg.ANSWERSHEETID,
cg.COLL_ID,cg.AUTH_EMAIL,cg.AUTH_MOBILE_NO,cg.AUTH_PERSON_NAME,cg.COLLEGECODE,cg.STUDENTROLLNO
FROM DATESHEET dt, COLL_SUB_LIST cg
WHERE cg.MCODE = dt.MCODE; 


CREATE OR REPLACE VIEW COLL_PASSWORD AS SELECT  dt.SHEET_ID,dt.EXAMDATE,dt.MCODE,dt.COURSEBRANCH,dt.SESS,dt.SUBJECTCODE,dt.SUBJECTTITLE,dt.TYPE,
cg.COLL_ID,cg.COLLEGECODE,
pg.PASSWORD,pg.PASS_ID
FROM DATESHEET dt, COLL_SUB_LIST cg, PASSWORDGENERATOR pg
WHERE cg.MCODE = dt.MCODE AND pg.MCODE=dt.MCODE AND pg.COLLEGECODE=cg.COLLEGECODE; 



CREATE OR REPLACE PROCEDURE PASSWORD_UPSERT (examdate IN DATE,collegecoge IN VARCHAR2,paperid IN VARCHAR2, l_count OUT NUMBER) 
IS
BEGIN
      SELECT count(*) INTO l_count FROM COLL_SUB_DATESHEET WHERE EXAMDATE=examdate AND collegecoge =COLLEGECODE AND paperid=PAPERID;
END; 
/
show errors;

IF l_count = 0 THEN
    INSERT into PASSWORDGENERATOR(PASSWORD,CREATETIME,ISVALID,EXPIRETIME,EXAMDATE,COLLEGECODE,SESS,MCODE,PAPERID,TYPE VARCHAR(20) NULL,)
  ELSE
    UPDATE table SET searches = .., account = ..;
  END IF;

/*******ROLEMASTER*********/
INSERT INTO ROLEMASTER(RID,TITLE) VALUES(1,'Super Admin');
INSERT INTO ROLEMASTER(RID,TITLE) VALUES(2,'Uploader');
INSERT INTO ROLEMASTER(RID,TITLE) VALUES(3,'College');
INSERT INTO ROLEMASTER(RID,TITLE) VALUES(4,'Student');
COMMIT;
INSERT INTO USERMASTER(USERNAME,PASSWORD,COLLEGECODE,ISBLOCKED) VALUES('superadmin','superadmin',NULL,NULL);
INSERT INTO USERMASTER(USERNAME,PASSWORD,COLLEGECODE,ISBLOCKED) VALUES('uploader1','uploader1',NULL,NULL);
INSERT INTO USERMASTER(USERNAME,PASSWORD,COLLEGECODE,ISBLOCKED) VALUES('college1','college1','clg123',NULL);
INSERT INTO USERMASTER(USERNAME,PASSWORD,COLLEGECODE,ISBLOCKED) VALUES('college2','college2','clg234',NULL);
COMMIT;
INSERT INTO ROLEUSER(ROLEID,USERID) VALUES(1,1);
INSERT INTO ROLEUSER(ROLEID,USERID) VALUES(2,2);
INSERT INTO ROLEUSER(ROLEID,USERID) VALUES(3,3);
INSERT INTO ROLEUSER(ROLEID,USERID) VALUES(3,4);
COMMIT;
INSERT INTO MENU (MENU_ID,MENUNAME,DESCRIPTION,PARENTID,NAVIGATIONURL,ISDEACTIVATE,ISLIMITEDTIME,STARTDATE,ENDDATE,ROLEID) VALUES(1,'Home',NULL,NULL,'~/UserHome.aspx',NULL,NULL,NULL,NULL,1);
INSERT INTO MENU (MENU_ID,MENUNAME,DESCRIPTION,PARENTID,NAVIGATIONURL,ISDEACTIVATE,ISLIMITEDTIME,STARTDATE,ENDDATE,ROLEID) VALUES(2,'Menu',NULL,NULL,NULL,NULL,NULL,NULL,NULL,1);
INSERT INTO MENU (MENU_ID,MENUNAME,DESCRIPTION,PARENTID,NAVIGATIONURL,ISDEACTIVATE,ISLIMITEDTIME,STARTDATE,ENDDATE,ROLEID) VALUES(3,'Date Sheet',NULL,2,NULL,NULL,NULL,NULL,NULL,1);
INSERT INTO MENU (MENU_ID,MENUNAME,DESCRIPTION,PARENTID,NAVIGATIONURL,ISDEACTIVATE,ISLIMITEDTIME,STARTDATE,ENDDATE,ROLEID) VALUES(4,'Upload Date Sheet',NULL,3,'~/sa/uploaddatesheet.aspx',NULL,NULL,NULL,NULL,1);
INSERT INTO MENU (MENU_ID,MENUNAME,DESCRIPTION,PARENTID,NAVIGATIONURL,ISDEACTIVATE,ISLIMITEDTIME,STARTDATE,ENDDATE,ROLEID) VALUES(5,'Users',NULL,2,NULL,NULL,NULL,NULL,NULL,1);
INSERT INTO MENU (MENU_ID,MENUNAME,DESCRIPTION,PARENTID,NAVIGATIONURL,ISDEACTIVATE,ISLIMITEDTIME,STARTDATE,ENDDATE,ROLEID) VALUES(6,'Add User',NULL,5,'~/sa/AddUser.aspx',NULL,NULL,NULL,NULL,1);
INSERT INTO MENU (MENU_ID,MENUNAME,DESCRIPTION,PARENTID,NAVIGATIONURL,ISDEACTIVATE,ISLIMITEDTIME,STARTDATE,ENDDATE,ROLEID) VALUES(7,'Time Management',NULL,2,'~/sa/TimeSettings.aspx',NULL,NULL,NULL,NULL,1);
INSERT INTO MENU (MENU_ID,MENUNAME,DESCRIPTION,PARENTID,NAVIGATIONURL,ISDEACTIVATE,ISLIMITEDTIME,STARTDATE,ENDDATE,ROLEID) VALUES(8,'College Subject List',NULL,2,'~/sa/CollegeSubjects.aspx',NULL,NULL,NULL,NULL,1);
INSERT INTO MENU (MENU_ID,MENUNAME,DESCRIPTION,PARENTID,NAVIGATIONURL,ISDEACTIVATE,ISLIMITEDTIME,STARTDATE,ENDDATE,ROLEID) VALUES(9,'Downloaded List',NULL,2,'~/sa/LogsDownload.aspx',NULL,NULL,NULL,NULL,1);
INSERT INTO MENU (MENU_ID,MENUNAME,DESCRIPTION,PARENTID,NAVIGATIONURL,ISDEACTIVATE,ISLIMITEDTIME,STARTDATE,ENDDATE,ROLEID) VALUES(10,'Home',NULL,NULL,'~/UserHome.aspx',NULL,NULL,NULL,NULL,2);
INSERT INTO MENU (MENU_ID,MENUNAME,DESCRIPTION,PARENTID,NAVIGATIONURL,ISDEACTIVATE,ISLIMITEDTIME,STARTDATE,ENDDATE,ROLEID) VALUES(11,'Menu',NULL,NULL,NULL,NULL,NULL,NULL,NULL,2);
INSERT INTO MENU (MENU_ID,MENUNAME,DESCRIPTION,PARENTID,NAVIGATIONURL,ISDEACTIVATE,ISLIMITEDTIME,STARTDATE,ENDDATE,ROLEID) VALUES(12,'Upload Question Paper',NULL,11,'~/Uploader/uploadPaper.aspx',NULL,NULL,NULL,NULL,2);
INSERT INTO MENU (MENU_ID,MENUNAME,DESCRIPTION,PARENTID,NAVIGATIONURL,ISDEACTIVATE,ISLIMITEDTIME,STARTDATE,ENDDATE,ROLEID) VALUES(13,'Home',NULL,NULL,'~/UserHome.aspx',NULL,NULL,NULL,NULL,3);
INSERT INTO MENU (MENU_ID,MENUNAME,DESCRIPTION,PARENTID,NAVIGATIONURL,ISDEACTIVATE,ISLIMITEDTIME,STARTDATE,ENDDATE,ROLEID) VALUES(14,'Menu',NULL,NULL,NULL,NULL,NULL,NULL,NULL,3);
INSERT INTO MENU (MENU_ID,MENUNAME,DESCRIPTION,PARENTID,NAVIGATIONURL,ISDEACTIVATE,ISLIMITEDTIME,STARTDATE,ENDDATE,ROLEID) VALUES(15,'DownLoad Question Paper',NULL,14,'~/clg/download.aspx',NULL,NULL,NULL,NULL,3);
INSERT INTO MENU (MENU_ID,MENUNAME,DESCRIPTION,PARENTID,NAVIGATIONURL,ISDEACTIVATE,ISLIMITEDTIME,STARTDATE,ENDDATE,ROLEID) VALUES(16,'Modify Question Paper',NULL,11,'~/uploader/ModifyQusetionPaper.aspx',NULL,NULL,NULL,NULL,2);
COMMIT;
INSERT INTO TIMEMASTER(TIME_ID,TITLE,SHORTCODE,VISIBLE_START_TIME,VISIBLE_END_TIME) VALUES (1,'MORNING SESSION','M',NULL,NULL);
INSERT INTO TIMEMASTER(TIME_ID,TITLE,SHORTCODE,VISIBLE_START_TIME,VISIBLE_END_TIME) VALUES (2,'EVENING SESSION','E',NULL,NULL);
COMMIT;


