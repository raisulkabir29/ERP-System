@model HRMS.Models.Grade

@{
    ViewBag.Title = "Edit";
    if (Ajax.IsThisAjaxRequest())
    {
        Layout = null;
    }
}

<script src="~/Content/ckeditor/ckeditor.js"></script>

@Html.StarkAjaxFormSubmiter("frmGrade", "tbGrade", true, "Action Successfully Executed")


@{
    if (!Ajax.IsThisAjaxRequest())
    {
        <section class="content-header">
            <h1>
                @ViewBag.Title
                @*<small>@ViewBag.Title</small>*@
            </h1>
        </section>
    }
}

<script type="text/javascript">
            //$(function () {
            //    $('select').searchableOptionList({
            //        maxHeight: '250px'
            //    });
            //});
</script>

@using (Html.BeginForm("Edit", "Grade", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmGrade" }))
{
    @Html.AntiForgeryToken()

    <!-- Main content -->
    <section class="content">
        <!-- Small boxes (Stat box) -->
        <div class="row">
            <div class="col-xs-12">
                <div class="box box-solid box-primary">
                    <div class="box-header">
                        <h3 class="box-title">Edit Grade</h3>
                    </div>
                    <!-- form start -->

                    <div role="form">
                        <div class="box-body">


                            <div class="form-group">
                                @Html.LabelFor(model => model.OTNOT, new { @class = "" })
                                @Html.EditorFor(model => model.OTNOT, new { htmlAttributes = new { @class = "", placeholder = "pls type OT or NOT" } })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Tofsil, new { @class = "" })
                                @Html.EditorFor(model => model.Tofsil, new { htmlAttributes = new { @class = "", placeholder = "pls type KA, KHA, or designation" } })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.TofsilBN, new { @class = "" })
                                @Html.EditorFor(model => model.TofsilBN, new { htmlAttributes = new { @class = "", placeholder = "pls type KA, KHA, or designation in Bangla" } })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.GradeNo, new { @class = "" })
                                @Html.EditorFor(model => model.GradeNo)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.GradeNoBN, new { @class = "" })
                                @Html.EditorFor(model => model.GradeNoBN, new { htmlAttributes = new { @class = "", placeholder = "pls type Grade No in Bangla" } })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.TofsilWGradeNo, new { @class = "" })
                                @Html.EditorFor(model => model.TofsilWGradeNo)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.GrossSalary, new { @class = "" })
                                @Html.EditorFor(model => model.GrossSalary)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.BasicSalary, new { @class = "" })
                                @Html.EditorFor(model => model.BasicSalary, new { htmlAttributes = new { @class = "", @readonly = "readonly" } })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.OvertimeRate, new { @class = "" })
                                @Html.EditorFor(model => model.OvertimeRate, new { htmlAttributes = new { @class = "", @readonly = "readonly" } })
                            </div>
                            @Html.HiddenFor(model => model.DateAdded)
                            @Html.HiddenFor(model => model.AddedBy)
                            @Html.Hidden("ModifiedDate", DateTime.Now.TimeOfDay)
                            @Html.Hidden("ModifiedBy", Env.GetUserInfo("userid"))

                        </div><!-- /.box-body -->
                        <div class="box-footer">
                            @Html.StarkInputButtion("Save", "submit", "btn btn-primary", "")
                            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

}